% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zarr_node.R
\docType{class}
\name{zarr_node}
\alias{zarr_node}
\title{Zarr Hierarchy node}
\description{
This class implements a Zarr node. The node is an element in the
hierarchy of the Zarr object. As per the Zarr specification, the node is
either a group or an array. Thus, this class is the ancestor of the
\link{zarr_group} and \link{zarr_array} classes. This class manages common features
such as names, key, prefixes and paths, as well as the hierarchy between
nodes and the \link{zarr_store} for persistent storage.

This class should never have to be instantiated or accessed directly.
Instead, use instances of \code{zarr_group} or \code{zarr_array}. Function arguments
are largely not checked, the group and array instances should do so prior
to calling methods here. The big exception is checking the validity of node
names.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{name}}{(read-only) The name of the node.}

\item{\code{parent}}{(read-only) The parent of the node. For a root node this
returns \code{NULL}, otherwise this \code{zarr_group} or \code{zarr_array} instance.}

\item{\code{store}}{(read-only) The store of the node.}

\item{\code{path}}{The path of this node, relative to the root node of the
hierarchy.}

\item{\code{prefix}}{The prefix of this node, relative to the root node of the
hierarchy.}

\item{\code{metadata}}{(read-only) The metadata document of this node, a list.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-zarr_node-new}{\code{zarr_node$new()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-zarr_node-new"></a>}}
\if{latex}{\out{\hypertarget{method-zarr_node-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new node in a Zarr hierarchy.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{zarr_node$new(name, metadata, parent, store)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the node.}

\item{\code{metadata}}{List with the metadata of the node.}

\item{\code{parent}}{The parent node of this new node. May be omitted when
initializing a root node.}

\item{\code{store}}{The store to persist data in. Ignored if a \code{parent} is
specified.}
}
\if{html}{\out{</div>}}
}
}
}
